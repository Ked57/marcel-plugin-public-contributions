{"version":3,"sources":["main.js"],"names":["MarcelPluginPublicContributions","root","document","getElementById","interval","Marcel","Plugin","setInterval","window","scrollBy","innerHeight","scrollY","body","offsetHeight","clearInterval","setTimeout","autoScroll","backend_url","fetch","method","headers","response","ok","console","error","json","data","top_message","Object","usableData","keys","key","push","first","shift","avatarUrl","name","count","map","row","join","props","body_bg_color","body_txt_color","body_font","row_border_color","first_txt_color","stylesvar","fetchData","headerElements","innerHTML","computeTemplate","style","backgroundColor","color","fontFamily","querySelectorAll","element","borderBottom","rowElements","borderTop","firstElements","log","init"],"mappings":"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","file":"main.5298bbfb.js","sourceRoot":"src","sourcesContent":["class MarcelPluginPublicContributions extends Marcel.Plugin {\n  constructor() {\n    super();\n    this.root = document.getElementById(\"root\");\n    this.interval = null;\n  }\n\n  autoScroll() {\n    this.interval = setInterval(() => {\n      window.scrollBy(0, 1);\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n        clearInterval(this.interval);\n        window.scrollBy(0, -window.scrollY);\n        setTimeout(() => this.autoScroll(), 5000);\n      }\n    }, 50);\n  }\n\n  async fetchData(backend_url) {\n    const response = await fetch(backend_url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response || !response.ok) {\n      console.error(\"no response from server\");\n      return;\n    }\n    return await response.json();\n  }\n\n  computeTemplate(data, top_message) {\n    const usableData = [];\n    for (key of Object.keys(data)) {\n      usableData.push(data[key]);\n    }\n    const first = usableData.shift();\n    return `\n    <div class=\"container\">\n      <div class=\"header\">\n        ${top_message}\n      </div>\n      <div class=\"info-container\">\n        ${`<div class=\"row first\">\n            <div class=\"row-item\"><img class=\"thumbnail\" src=${first.avatarUrl}></div>\n            <div class=\"row-item\">${first.name}</div>\n            <div class=\"row-item\">${first.count}</div>\n          </div>`}\n        ${usableData\n          .map(\n            row =>\n              `<div class=\"row\">\n              <div class=\"row-item\"><img class=\"thumbnail\" src=${row.avatarUrl}></div>\n              <div class=\"row-item\">${row.name}</div>\n              <div class=\"row-item\">${row.count}</div>\n            </div>`\n          )\n          .join(\"\")}\n      </div>\n    </div>`;\n  }\n\n  async render() {\n    const {\n      backend_url,\n      top_message,\n      body_bg_color,\n      body_txt_color,\n      body_font,\n      row_border_color,\n      first_txt_color,\n      stylesvar = {}\n    } = this.props;\n\n    this.root.innerHTML = this.computeTemplate(\n      await this.fetchData(backend_url),\n      top_message\n    );\n\n    document.body.style.backgroundColor = body_bg_color;\n    document.body.style.color = body_txt_color;\n    document.body.style.fontFamily = body_font;\n    const headerElements = document.querySelectorAll(\".header\");\n    for (element of headerElements) {\n      element.style.borderBottom = `1px solid ${row_border_color}`;\n      element.style.backgroundColor = body_bg_color;\n      element.style.color = body_txt_color;\n    }\n    const rowElements = document.querySelectorAll(\".row\");\n    for (element of rowElements) {\n      element.style.borderTop = `1px solid ${row_border_color}`;\n    }\n    const firstElements = document.querySelectorAll(\".first\");\n    for (element of firstElements) {\n      element.style.color = first_txt_color;\n    }\n\n    setTimeout(() => this.autoScroll(), 5000);\n\n    setInterval(async () => {\n      this.root.innerHTML = this.computeTemplate(\n        await this.fetchData(backend_url),\n        top_message\n      );\n      console.log(\"Fetched updated data\");\n    }, 3600000);\n\n    // stylesvar is a special property containing the global media theme.\n    // You should use it to have a consistent style accross all the media.\n    if (stylesvar[\"primary-color\"])\n      this.root.style.color = stylesvar[\"primary-color\"];\n    if (stylesvar[\"font-family\"])\n      this.root.style.fontFamily = stylesvar[\"font-family\"];\n  }\n}\n\nMarcel.init(MarcelPluginPublicContributions);\n\n// uncomment this line to try the plugin in a browser :\n// Marcel.changeProps({\n//   backend_url: \"http://localhost:8080\", \n//   body_bg_color: \"#f2f2f2\",\n//   body_txt_color: \"#4c4c4c\",\n//   body_font: \"Helvetica, Arial, sans-serif\",\n//   row_border_color: \"#d2d6d8\",\n//   first_txt_color: \"#b51432\",\n//   top_message: \"Public contributions of Zenika Members during hacktoberfest !\"\n// });\n"]}